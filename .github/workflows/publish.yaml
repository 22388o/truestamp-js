name: Node.js Package

on:
  release:
    types: [created]

jobs:
  test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ matrix.node-version }}-${{ runner.OS }}-modules-${{ hashFiles('package.json', 'package-lock.json') }}
      - name: CI Install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        # SECURITY : See : https://wildwolf.name/secure-way-run-npm-ci/
        run: npm ci --ignore-scripts
      - name: Cache dist
        id: cache-dist
        uses: actions/cache@v2
        with:
          path: dist
          # invalidate key when package*.json (including version bump) or any .ts files in src/ or its subdirectories
          key: ${{ matrix.node-version }}-${{ runner.OS }}-dist-${{ hashFiles('package.json', 'package-lock.json', 'src/**/*.ts') }}
      - name: Build
        if: steps.cache-dist.outputs.cache-hit != 'true'
        run: npm run build --if-present
      - name: Test
        run: npm test
        env:
          CI: true

  publish-gpr:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: "https://npm.pkg.github.com"
          # Defaults to the user or organization that owns the workflow file
          scope: "@truestamp"
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: 14.x-${{ runner.OS }}-modules-${{ hashFiles('package.json', 'package-lock.json') }}
      - name: CI Install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        # SECURITY : See : https://wildwolf.name/secure-way-run-npm-ci/
        run: npm ci --ignore-scripts
      - name: Cache dist
        id: cache-dist
        uses: actions/cache@v2
        with:
          path: dist
          # invalidate key when package*.json (including version bump) or any .ts files in src/ or its subdirectories
          key: 14.x-${{ runner.OS }}-dist-${{ hashFiles('package.json', 'package-lock.json', 'src/**/*.ts') }}
      - name: Build
        if: steps.cache-dist.outputs.cache-hit != 'true'
        run: npm run build --if-present
      - name: Test
        run: npm test
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    needs: publish-gpr
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to GitHub Packages
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: "https://registry.npmjs.org/"
          # Defaults to the user or organization that owns the workflow file
          scope: "@truestamp"
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: 14.x-${{ runner.OS }}-modules-${{ hashFiles('package.json', 'package-lock.json') }}
      - name: CI Install
        if: steps.cache-modules.outputs.cache-hit != 'true'
        # SECURITY : See : https://wildwolf.name/secure-way-run-npm-ci/
        run: npm ci --ignore-scripts
      - name: Cache dist
        id: cache-dist
        uses: actions/cache@v2
        with:
          path: dist
          # invalidate key when package*.json (including version bump) or any .ts files in src/ or its subdirectories
          key: 14.x-${{ runner.OS }}-dist-${{ hashFiles('package.json', 'package-lock.json', 'src/**/*.ts') }}
      - name: Build
        if: steps.cache-dist.outputs.cache-hit != 'true'
        run: npm run build --if-present
      - name: Test
        run: npm test
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
